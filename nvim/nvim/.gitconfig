[user]
	name = Reuter Junior
	email = reuter_junior@hotmail.com
[core]
	edit = vim
[init]
	defaultBranch = main
[alias]
  clear-local-branchs = "!clb() { \
    echo Executing 'it remote prune origin' \
    && git remote prune origin \
    && echo Finding merged branchs \
    && echo '# Remove from the buffer the branchs you want to keep' >/tmp/merged-branches \
    && git branch --merged | grep \"master\\|next-release\\|$(git rev-parser --abbrev-ref HEAD\" -v >>/tmp/merged-branches \
    && $EDITOR /tmp/merged-branches +':setfiletype ClearLocalBranches' \
    && sed -ine '/^#/d /tmp/merged-branches \
    && xargs git branch -d </tmp/merged-bracnhes;\
    }; clb"
  pull-preview = "!gitpullpreview() { \
    echo Fetching new changes... \
    && git fetch --prune \
    && git lop -p ...@{u};\
    }; pitpullpreview"
  pull-diff = "!gitpulldiff() { \
    echo Fetching new changes... \
    && git fetch --prune \
    && git diff ...@{u};\
    }; gitpulldiff"
  branch-rename = "!branchrename() { \
    git branch --show-current >/tmp/new-branch-name;\
    $EDITOR /tmp/new-branch-name;\
    </tmp/new-branch-name xargs -I{} git branch -m {};\
    }; branchrename"

  # shorthands
  pp = pull-preview
  pd = pull-diff
  brr = branch-rename
  clb = clear-local-branches

  # geral
  olg = log --graph --pretty=format:'%Cred%h%Creset - %C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
  hist = log --graph --decorate --pretty=oneline --abbrev-commit --all format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(reset)%C(bold yellow)%d%C(reset)'
  lop = log --decorate --pretty=oneline --abbrev-commit --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'
  elog = "!git log | gitmoji-log | bat --plain"
  ad = add -p
  ada = add -A
  adog = log --all --decorate --oneline --graph
  ch = checkout
  co = commit
  cp = cherry-pick
  d = diff
  ds = diff --staged
  dw = diff --color-words='[^[:space:]]|([[:alnum:]]|UTF_8_GUARD)+'
  f = fetch -p
  fix = "!vim `git diff --name-only --diff-filter=U`"
  fuck = commit --amend
  pow = push origin HEAD -u
  powf = push origin HEAD -u --force-with-lease
  g = "!gitagain() {git \"$@\"; }; gitagain"
  s = status
  wp = rebase --continue
  back = checkout HEAD~
  next = "!git checkout $(git rev-list --topo-order HEAD..master | tail -1)"
  c = "!gitmoji -c"
  rb = reset --hard @{u}
